-- üîÅ –ê–í–¢–û–§–ê–†–ú: –°—Ç–∞–≤–∏—Ç, –∞–ø–≥—Ä–µ–π–¥–∏—Ç, —Ä–µ—Å—Ç–∞—Ä—Ç–∏—Ç, –∞–≤—Ç–æ—Å–∫–∏–ø –Ω–∞ 5—Å –ø–æ—Å–ª–µ beetroot ‚Üí 2—Å –ø–æ—Å–ª–µ beehive
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")
local cash = player:WaitForChild("leaderstats"):WaitForChild("Cash")
local restarting = false
local autoSkipEnabled = false
local autoSkipDelay = nil

-- üí∞ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –¥–µ–Ω–µ–≥
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then
        return tonumber(val:lower():gsub("k", "")) * 1000
    end
    return tonumber(val) or 0
end

-- üí∞ –û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–Ω–µ–≥
local function waitForCash(amount)
    repeat wait(0.2) until parseCash(cash.Value) >= amount or restarting
end

-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç ID
local function placeUnitAndGetId(unitName, position)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(position) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true,
        Position = position,
        CF = cf,
        Rotation = 180
    })

    for _ = 1, 50 do
        wait(0.1)
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

-- ‚¨ÜÔ∏è –ê–ø–≥—Ä–µ–π–¥
local function upgradeAtCash(unitId, upgradeSteps, onStep)
    for i, cost in ipairs(upgradeSteps) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
        if onStep then onStep(i) end
    end
end

-- üöÄ –ê–≤—Ç–æ—Å–∫–∏–ø –≤–æ–ª–Ω
task.spawn(function()
    while true do
        wait(autoSkipDelay or 999)
        if autoSkipEnabled and not restarting then
            ReplicatedStorage.RemoteFunctions.SkipWave:InvokeServer("y")
        end
    end
end)

-- ‚òëÔ∏è –ê–≤—Ç–æ–≤—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
local function voteImpossible()
    local gui = player:WaitForChild("PlayerGui")
    task.spawn(function()
        while true do
            wait(0.1)
            local voteUI = gui:FindFirstChild("GameGui")
                and gui.GameGui:FindFirstChild("Screen")
                and gui.GameGui.Screen:FindFirstChild("Middle")
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if voteUI and voteUI.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- üîÅ Restart –º–æ–Ω–∏—Ç–æ—Ä
task.spawn(function()
    local gui = player:WaitForChild("PlayerGui")
    while true do
        wait(0.5)
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui:FindFirstChild("Screen")
            and gui.GameGui.Screen:FindFirstChild("Middle")
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd:FindFirstChild("Items")
            and gui.GameGui.Screen.Middle.GameEnd.Items:FindFirstChild("Frame")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame:FindFirstChild("Actions")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions:FindFirstChild("Items")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")

        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- üîÇ –û–¥–∏–Ω –º–∞—Ç—á
local function runMatch()
    wait(1)
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    wait(1)
    restarting = false
    autoSkipEnabled = false
    autoSkipDelay = nil

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(-80.85776, -29.52275, 215.46897)
    end

    -- 1. Money Tree
    waitForCash(400)
    placeUnitAndGetId("unit_money_tree", Vector3.new(-99.5573, -27.8982, 198.4464))

    -- 2. –ü–µ—Ä–≤—ã–π Beetroot
    waitForCash(200)
    local b1 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-92.6838, -29.5228, 225.8844))
    if b1 then
        upgradeAtCash(b1, {250, 500, 750}, function(step)
            if step == 1 then
                autoSkipEnabled = true
                autoSkipDelay = 5
            end
        end)
    end

    -- 3. –í—Ç–æ—Ä–æ–π Beetroot
    waitForCash(200)
    local b2 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-69.7396, -29.5228, 226.1392))
    if b2 then upgradeAtCash(b2, {250, 500, 750}) end

    -- 4. –¢—Ä–µ—Ç–∏–π Beetroot
    waitForCash(200)
    local b3 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-69.1002, -29.5228, 205.2425))
    if b3 then upgradeAtCash(b3, {250, 500, 750}) end

    -- 5. –ü–µ—Ä–≤—ã–π Beehive
    waitForCash(2500)
    local h1 = placeUnitAndGetId("unit_beehive", Vector3.new(-91.5276, -28.9081, 210.0433))
    if h1 then
        upgradeAtCash(h1, {1500, 4000, 10000, 25000}, function(step)
            if step == 1 then
                autoSkipEnabled = true
                autoSkipDelay = 2
            end
        end)
    end

    -- 6. –í—Ç–æ—Ä–æ–π Beehive
    wait(1)
    waitForCash(2500)
    local h2 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.2081, -28.9081, 205.2484))
    if h2 then upgradeAtCash(h2, {1500, 4000, 10000, 25000}) end

    -- 7. –¢—Ä–µ—Ç–∏–π Beehive
    waitForCash(2500)
    local h3 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.9386, -28.9081, 190.8840))
    if h3 then upgradeAtCash(h3, {1500, 4000, 10000, 25000}) end

    -- 8‚Äì11. Big Mushrooms
    local mushPos = {
        Vector3.new(-70.8455, -27.5161, 207.9814),
        Vector3.new(-76.7063, -27.5161, 212.7099),
        Vector3.new(-83.4403, -27.5161, 205.4651),
        Vector3.new(-68.7585, -27.5161, 216.4131),
    }

    for _, pos in ipairs(mushPos) do
        waitForCash(3000)
        local id = placeUnitAndGetId("unit_big_mushroom", pos)
        if id then upgradeAtCash(id, {6000, 7500, 12500, 20000}) end
        if restarting then return end
    end

    -- ‚è≥ –ñ–¥—ë–º –∫–æ–Ω—Ü–∞ –º–∞—Ç—á–∞
    while not restarting do wait(1) end
end

-- üîÅ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π –∑–∞–ø—É—Å–∫
while true do runMatch() end
