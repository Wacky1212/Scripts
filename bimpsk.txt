-- üîÅ –°–¢–ê–ë–ò–õ–¨–ù–´–ô –ê–í–¢–û–§–ê–†–ú –° –£–ú–ù–´–ú –ê–í–¢–û–°–ö–ò–ü–û–ú
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local restarting = false
local autoSkipDelay = nil
local cash = nil

-- üí∞ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–Ω–µ–≥
local function parseCash(val)
    if not val or type(val) ~= "string" and type(val) ~= "number" then return 0 end
    val = tostring(val):gsub(",", "")
    if val:lower():find("k") then return tonumber(val:lower():gsub("k", "")) * 1000 end
    return tonumber(val) or 0
end

local function waitForCashSystem()
    repeat wait(0.1) until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

local function waitForCash(amount)
    repeat wait(0.1) until restarting or (cash and parseCash(cash.Value) >= amount)
end

-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–∞
local function placeUnitAndGetId(unitName, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end
    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = 180
    })
    for _ = 1, 50 do
        wait(0.1)
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

-- ‚¨ÜÔ∏è –ê–ø–≥—Ä–µ–π–¥
local function upgradeAtCash(id, upgrades, onStep, safeWait)
    for i, cost in ipairs(upgrades) do
        waitForCash(cost)
        if restarting then return end
        if safeWait then wait(1) end -- –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –≥—Ä–∏–±–æ–≤
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(id)
        if onStep then onStep(i) end
    end
end

-- ‚è© –ê–≤—Ç–æ—Å–∫–∏–ø –ª–æ–≥–∏–∫–∞
task.spawn(function()
    while true do
        wait(autoSkipDelay or 999)
        if autoSkipDelay and not restarting then
            ReplicatedStorage.RemoteFunctions.SkipWave:InvokeServer("y")
        end
    end
end)

-- ‚òëÔ∏è –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
local function voteImpossible()
    task.spawn(function()
        while true do
            wait(0.1)
            waitForCashSystem()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- üîÅ Restart –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ/–ø–æ–±–µ–¥–µ
task.spawn(function()
    while true do
        wait(1)
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- üéØ –û–¥–∏–Ω –º–∞—Ç—á
local function runMatch()
    wait(1)
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    waitForCashSystem()
    restarting = false
    autoSkipDelay = nil

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then root.CFrame = CFrame.new(-80.85776, -29.52275, 215.46897) end

    -- 1. –î–µ–Ω—å–≥–∏ –¥–µ—Ä–µ–≤–æ
    waitForCash(400)
    placeUnitAndGetId("unit_money_tree", Vector3.new(-99.5573, -27.8982, 198.4464))

    -- 2. Beetroot 1
    waitForCash(200)
    local b1 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-92.6838, -29.5228, 225.8844))
    if b1 then
        upgradeAtCash(b1, {250, 500, 750}, function(step)
            if step == 1 then
                autoSkipDelay = 5 -- ‚è© –ø–µ—Ä–≤—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Å–∫–∏–ø
            end
        end)
    end

    -- 3. Beetroot 2
    waitForCash(200)
    local b2 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-69.7396, -29.5228, 226.1392))
    if b2 then upgradeAtCash(b2, {250, 500, 750}) end

    -- 4. Beetroot 3
    waitForCash(200)
    local b3 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-69.1002, -29.5228, 205.2425))
    if b3 then upgradeAtCash(b3, {250, 500, 750}) end

    -- 5. Beehive 1
    waitForCash(2500)
    local h1 = placeUnitAndGetId("unit_beehive", Vector3.new(-91.5276, -28.9081, 210.0433))
    if h1 then
        upgradeAtCash(h1, {1500, 4000, 10000, 25000}, function(step)
            if step == 1 then
                autoSkipDelay = 2 -- ‚è© –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∞–≤—Ç–æ—Å–∫–∏–ø –ø–æ—Å–ª–µ beehive
            end
        end)
    end

    -- 6. Beehive 2
    wait(1)
    waitForCash(2500)
    local h2 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.2081, -28.9081, 205.2484))
    if h2 then upgradeAtCash(h2, {1500, 4000, 10000, 25000}) end

    -- 7. Beehive 3
    waitForCash(2500)
    local h3 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.9386, -28.9081, 190.8840))
    if h3 then upgradeAtCash(h3, {1500, 4000, 10000, 25000}) end

    -- 8‚Äì11. –ì—Ä–∏–±—ã
    local mushPos = {
        Vector3.new(-70.8455, -27.5161, 207.9814),
        Vector3.new(-76.7063, -27.5161, 212.7099),
        Vector3.new(-83.4403, -27.5161, 205.4651),
        Vector3.new(-68.7585, -27.5161, 216.4131),
    }
    for _, pos in ipairs(mushPos) do
        waitForCash(3000)
        local id = placeUnitAndGetId("unit_big_mushroom", pos)
        if id then upgradeAtCash(id, {6000, 7500, 12500, 20000}, nil, true) end
        if restarting then return end
    end

    while not restarting do wait(1) end
end

-- üîÅ –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while true do runMatch() end
