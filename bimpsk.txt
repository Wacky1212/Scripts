-- üîÅ –£–õ–¨–¢–†–ê-–õ–Å–ì–ö–ò–ô –ê–í–¢–û–§–ê–†–ú: Beetroot ‚Üí –ê–ø–≥—Ä–µ–π–¥—ã ‚Üí –ê–≤—Ç–æ—Å–∫–∏–ø ‚Üí –†–µ—Å—Ç–∞—Ä—Ç ‚Üí –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–∞–≥–æ–≤

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local cash
local restarting = false
local autoSkip = false

-- üí∞ –ß—Ç–µ–Ω–∏–µ –∏ –æ–∂–∏–¥–∞–Ω–∏–µ Cash
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then return tonumber(val:lower():gsub("k", "")) * 1000 end
    return tonumber(val) or 0
end

local function waitForCashSystem()
    repeat RunService.Heartbeat:Wait() until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

local function waitForCash(amount)
    repeat RunService.Heartbeat:Wait() until parseCash(cash.Value) >= amount or restarting
end

-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–∞
local function placeUnit(unitName, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = 180
    })

    for _ = 1, 50 do
        RunService.Heartbeat:Wait()
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

-- ‚¨ÜÔ∏è –ê–ø–≥—Ä–µ–π–¥
local function upgradeAtCash(unitId, costs)
    for _, cost in ipairs(costs) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
    end
end

-- üß† –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ Impossible
local function voteImpossible()
    task.spawn(function()
        while true do
            RunService.Heartbeat:Wait()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- üîÅ Restart –ø—Ä–∏ –ø—Ä–æ–∏–≥—Ä—ã—à–µ
task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- ‚è© –ê–≤—Ç–æ—Å–∫–∏–ø –≤–æ–ª–Ω
task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        if autoSkip and not restarting then
            ReplicatedStorage.RemoteFunctions.SkipWave:InvokeServer("y")
        end
    end
end)

-- üí£ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–∞–≥–æ–≤ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
task.spawn(function()
    while true do
        wait(2)
        for _, v in pairs(entityFolder:GetChildren()) do
            if v:IsA("Model") and v.Name:lower():find("enemy_") then
                pcall(function() v:Destroy() end)
            end
        end
    end
end)

-- üîÅ –û–¥–∏–Ω —Ü–∏–∫–ª
local function run()
    RunService.Heartbeat:Wait()
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    waitForCashSystem()
    restarting = false
    autoSkip = false

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = CFrame.new(-80.85776, -29.52275, 215.46897)
    end

    -- 1. –ü–µ—Ä–≤—ã–π Beetroot
    waitForCash(200)
    if restarting then return end
    local id1 = placeUnit("unit_electric_beetroot", Vector3.new(-92.6838, -29.5228, 225.8844))
    if id1 then
        autoSkip = true
        upgradeAtCash(id1, {250, 500, 750})
    end

    -- 2. –í—Ç–æ—Ä–æ–π Beetroot
    waitForCash(200)
    if restarting then return end
    local id2 = placeUnit("unit_electric_beetroot", Vector3.new(-105.2417, -29.5228, 221.2254))
    if id2 then upgradeAtCash(id2, {250, 500, 750}) end

    while not restarting do RunService.Heartbeat:Wait() end
end

-- üîÅ –ó–∞–ø—É—Å–∫
while true do
    run()
end
