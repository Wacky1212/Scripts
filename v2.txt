-- üîÅ –û–ë–ù–û–í–õ–Å–ù–ù–´–ô –°–ö–†–ò–ü–¢ –° –ù–û–í–´–ú –¢–ï–õ–ï–ü–û–†–¢–û–ú –ò –î–í–£–ú–Ø LUCKY PLANT

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local cash
local restarting = false

local function parseCash(val)
    val = tostring(val or "0"):gsub(",", ""):lower()
    val = val:match("[0-9%.]*k?") or "0"
    if val:find("k") then
        local numberPart = tonumber(val:gsub("k", ""))
        if numberPart then
            return numberPart * 1000
        else
            return 0
        end
    end
    return tonumber(val) or 0
end

local function waitForCashSystem()
    repeat RunService.Heartbeat:Wait() until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

local function waitForCash(amount)
    repeat RunService.Heartbeat:Wait() until parseCash(cash and cash.Value) >= amount or restarting
end

local function placeUnit(unitName, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end
    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = 180
    })
    for _ = 1, 50 do
        RunService.Heartbeat:Wait()
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

local function upgradeAtCash(unitId, costs)
    for _, cost in ipairs(costs) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
    end
end

local function voteImpossible()
    task.spawn(function()
        while true do
            RunService.Heartbeat:Wait()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle.GameEnd
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

local function reduceLag()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") then
            obj.Enabled = false
        elseif obj:IsA("Decal") then
            obj.Transparency = 1
        elseif obj:IsA("Sound") then
            obj.Volume = 0
        elseif obj:IsA("Highlight") then
            obj.Enabled = false
        end
    end
    Lighting.GlobalShadows = false
    Lighting.Brightness = 0
    Lighting.FogEnd = 999999
end

local function run()
    RunService.Heartbeat:Wait()
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    waitForCashSystem()
    restarting = false
    reduceLag()

    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then root.CFrame = CFrame.new(-80.85776, -29.52275, 215.46897) end

    -- ü•¨ Beetroots
    waitForCash(200)
    local b1 = placeUnit("unit_electric_beetroot", Vector3.new(-105.2417, -29.5228, 221.2254))
    if b1 then upgradeAtCash(b1, {250, 500, 750}) end

    waitForCash(200)
    local b2 = placeUnit("unit_electric_beetroot", Vector3.new(-92.6838, -29.5228, 225.8844))
    if b2 then upgradeAtCash(b2, {250, 500, 750}) end

    waitForCash(200)
    local b3 = placeUnit("unit_electric_beetroot", Vector3.new(-70.1524, -29.5228, 225.6615))
    if b3 then upgradeAtCash(b3, {250, 500, 750}) end

    -- üìç –ù–æ–≤—ã–π —Ç–µ–ª–µ–ø–æ—Ä—Ç –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ Beetroot
    if root then root.CFrame = CFrame.new(-29.1573, -29.6041, 49.5348) end

    -- üêù Beehives
    local newBeehivePositions = {
        Vector3.new(-65.7664, -28.9081, 98.0514),
        Vector3.new(-59.5106, -28.9081, 97.5005),
        Vector3.new(-53.1729, -28.9081, 102.7370),
    }

    for _, pos in ipairs(newBeehivePositions) do
        waitForCash(2500)
        local id = placeUnit("unit_beehive", pos)
        if id then upgradeAtCash(id, {1500, 4000, 10000, 25000}) end
        if restarting then return end
    end

    -- üçÄ –ü–µ—Ä–≤—ã–π Lucky Plant
    waitForCash(1500)
    local lucky1 = placeUnit("unit_lucky_plant", Vector3.new(-61.5372, -29.5228, 106.7369))
    if lucky1 then upgradeAtCash(lucky1, {3000, 4000, 7500, 15000}) end
    if restarting then return end

    -- üçÄ –í—Ç–æ—Ä–æ–π Lucky Plant
    waitForCash(1500)
    local lucky2 = placeUnit("unit_lucky_plant", Vector3.new(-67.8058, -29.5228, 112.3958))
    if lucky2 then upgradeAtCash(lucky2, {3000, 4000, 7500, 15000}) end
    if restarting then return end

    -- üçÑ Mushrooms
    local mushCoords = {
        Vector3.new(-65.4727, -27.5161, 118.2855),
        Vector3.new(-69.3593, -27.5161, 119.5750),
        Vector3.new(-65.5619, -27.5161, 121.1351),
        Vector3.new(-61.3710, -27.5161, 119.0315),
    }
    for _, pos in ipairs(mushCoords) do
        waitForCash(3000)
        local id = placeUnit("unit_big_mushroom", pos)
        if id then upgradeAtCash(id, {6000, 7500, 12500, 20000}) end
        if restarting then return end
    end

    -- ‚ö° Pulse Plants
    local pulseCoords = {
        Vector3.new(-61.8215, -28.4230, 115.9347),
        Vector3.new(-70.7197, -28.4230, 117.1897),
        Vector3.new(-63.0293, -28.4230, 111.5264),
    }
    for _, pos in ipairs(pulseCoords) do
        waitForCash(5000)
        local id = placeUnit("unit_pulse_plant", pos)
        if id then upgradeAtCash(id, {3000, 7500, 10000, 25000}) end
        if restarting then return end
    end

    -- üå∏ Dual Blossom
    waitForCash(10000)
    local dual1 = placeUnit("unit_dual_blossom", Vector3.new(-71.1572, -28.4230, 109.5525))
    if dual1 then upgradeAtCash(dual1, {7500, 15000, 20000, 60000}) end

    waitForCash(10000)
    local dual2 = placeUnit("unit_dual_blossom", Vector3.new(-67.6817, -28.4230, 106.7466))
    if dual2 then upgradeAtCash(dual2, {7500, 15000, 20000, 60000}) end

    -- üíß Sprinkler
    waitForCash(500)
    local sprinklerPos = Vector3.new(-56.2399, -29.6041, 111.9954)
    local sprinklerId = placeUnit("unit_sprinkler", sprinklerPos)
    if sprinklerId then upgradeAtCash(sprinklerId, {560, 750, 1000, 1300}) end

    while not restarting do RunService.Heartbeat:Wait() end
end

while true do run() end
