-- üå± v5: —Ç–≤–æ–∏ —é–Ω–∏—Ç—ã + –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ‚Äë—Ä–µ—Å—Ç–∞—Ä—Ç

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local cash
local restarting = false

-- üí∞ –ü–∞—Ä—Å–µ—Ä –¥–µ–Ω–µ–≥
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", ""):lower()
    val = val:match("[0-9%.]*k?") or "0"
    if val:find("k") then
        local numberPart = tonumber(val:gsub("k", ""))
        return numberPart and numberPart * 1000 or 0
    end
    return tonumber(val) or 0
end

-- –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ª–∏–¥–µ—Ä—Å—Ç–∞—Ç—Å–æ–≤
local function waitForCashSystem()
    repeat RunService.Heartbeat:Wait() until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

-- –ñ–¥—ë–º –ø–æ–∫–∞ –Ω–∞–∫–æ–ø–∏—Ç—Å—è —Å—É–º–º–∞
local function waitForCash(amount)
    repeat RunService.Heartbeat:Wait() until parseCash(cash and cash.Value) >= amount or restarting
end

-- –°—Ç–∞–≤–∏–º —é–Ω–∏—Ç
local function placeUnit(unitName, pos, rotation)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end
    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(rotation or 180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = rotation or 180
    })
    for _ = 1, 50 do
        RunService.Heartbeat:Wait()
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

-- –ê–ø–≥—Ä–µ–π–¥ –ø—Ä–∏ –Ω—É–∂–Ω–æ–º –∫—ç—à–µ
local function upgradeAtCash(unitId, costs)
    for _, cost in ipairs(costs) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
    end
end

-- –ì–æ–ª–æ—Å—É–µ–º –∑–∞ impossible
local function voteImpossible()
    task.spawn(function()
        while not restarting do
            RunService.Heartbeat:Wait()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- –í–æ—Ç—á–µ—Ä –∑–∞ –æ–∫–Ω–æ–º —Ä–µ—Å—Ç–∞—Ä—Ç–∞
task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle.GameEnd
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- –£–±–∏—Ä–∞–µ–º –ª–∞–≥–∏
local function reduceLag()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") then
            obj.Enabled = false
        elseif obj:IsA("Decal") then
            obj.Transparency = 1
        elseif obj:IsA("Sound") then
            obj.Volume = 0
        elseif obj:IsA("Highlight") then
            obj.Enabled = false
        end
    end
    Lighting.GlobalShadows = false
    Lighting.Brightness = 0
    Lighting.FogEnd = 999999
end

-- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
local function run()
    waitForCashSystem()
    restarting = false
    reduceLag()
    voteImpossible()

    ------------------------------------------------------------------
    -- Electric Beetroot (–ø–µ—Ä–≤—ã–π, –±–µ–∑ –∞–ø–≥—Ä–µ–π–¥–∞ 1000)
    waitForCash(200)
    if restarting then return end
    local beet1 = placeUnit("unit_electric_beetroot", Vector3.new(-4.4063549, 2, 345.56976), 180)
    if beet1 then upgradeAtCash(beet1, {250, 500, 750}) end

    -- Beehives
    local beehivePos = {
        Vector3.new(1.9588907, 2, 315.40445),
        Vector3.new(-0.548887, 2, 315.13138),
        Vector3.new(-3.0866513, 2, 315.07605),
    }
    for _, pos in ipairs(beehivePos) do
        waitForCash(2500)
        local id = placeUnit("unit_beehive", pos, 180)
        upgradeAtCash(id, {1500, 4000, 10000, 25000})
        if restarting then return end
    end

    -- Hellroots (unit_dragon_head)
    local hellPos = {
        Vector3.new(-4.420584, 2, 332.72015),
        Vector3.new(-3.776131, 2, 336.3862),
        Vector3.new(-3.75974, 2, 340.1415),
    }
    for _, pos in ipairs(hellPos) do
        waitForCash(2000)
        local id = placeUnit("unit_dragon_head", pos, 180)
        upgradeAtCash(id, {5500, 8000, 12000, 33000})
        if restarting then return end
    end

    -- Lucky Clover
    waitForCash(1500)
    local lucky = placeUnit("unit_lucky_plant", Vector3.new(3.1732483, 2, 327.08862), 180)
    upgradeAtCash(lucky, {3000, 4000, 7500, 15000})
    if restarting then return end

    -- Sprinkler
    waitForCash(600)
    local sprinkler = placeUnit("unit_sprinkler", Vector3.new(3.5520439, 2, 324.0253), 180)
    upgradeAtCash(sprinkler, {560, 750, 1000, 1300})
    if restarting then return end

    -- Seed Mech (unit_old_machine)
    local seedPos = {
        Vector3.new(4.495348, 2, 330.9711),
        Vector3.new(4.059284, 2, 333.384),
        Vector3.new(4.0767164, 2, 335.8547),
        Vector3.new(4.361018, 2, 337.6783),
        Vector3.new(4.0229464, 2, 340.01508),
    }
    for _, pos in ipairs(seedPos) do
        waitForCash(3000)
        local id = placeUnit("unit_old_machine", pos, 180)
        upgradeAtCash(id, {5000, 8800, 13700, 28500})
        if restarting then return end
    end

    -- Rosebeam
    local rosePos = {
        Vector3.new(4.988904, 2, 343.2156),
        Vector3.new(-3.931901, 2, 344.3135),
        Vector3.new(-4.04077, 2, 347.7847),
    }
    for _, pos in ipairs(rosePos) do
        waitForCash(12750)
        local id = placeUnit("unit_rosebeam", pos, 180)
        upgradeAtCash(id, {8000, 14000, 30000, 57500})
        if restarting then return end
    end

    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ Electric Beetroot (—Å –∞–ø–≥—Ä–µ–π–¥–æ–º –∑–∞ 1000)
    local beetExtra = {
        Vector3.new(4.246704, 2, 347.19022),
        Vector3.new(4.004512, 2, 349.5113),
        Vector3.new(6.9415894, 2, 347.3568),
    }
    for _, pos in ipairs(beetExtra) do
        waitForCash(200)
        local id = placeUnit("unit_electric_beetroot", pos, 180)
        upgradeAtCash(id, {250, 500, 750, 1000})
        if restarting then return end
    end

    while not restarting do RunService.Heartbeat:Wait() end
end

-- üîÅ –í–µ—á–Ω—ã–π —Ü–∏–∫–ª
while true do
    run()
end
