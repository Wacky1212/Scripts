-- üîÅ –ê–í–¢–û-–°–ö–†–ò–ü–¢: –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∏–π –≤—ã–±–æ—Ä 'unit_' –º–æ–¥–µ–ª–µ–π –ø–æ—Å–ª–µ –ø–ª–µ–π—Å–º–µ–Ω—Ç–∞ + —É—Å—Ç–æ–π—á–∏–≤—ã–π –∞–≤—Ç–æ-RESTART

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")

-- –î–ï–ù–¨–ì–ò / –°–û–°–¢–û–Ø–ù–ò–ï
local cash
local restarting = true                 -- —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª run()
local last_restart = 0                  -- –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ (time())
local RESTART_DEBOUNCE = 1              -- –¥–µ–±–∞—É–Ω—Å –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ (—Å–µ–∫)
local suppressWatcherUntil = 0          -- –¥–æ —ç—Ç–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∞–≤—Ç–æ-—Ä–µ—Å. –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç –∫–Ω–æ–ø–∫—É Again

-- –ü–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞ Map –ø–µ—Ä–µc–æ–∑–¥–∞—ë—Ç—Å—è ‚Üí –Ω–µ–ª—å–∑—è –∫—ç—à–∏—Ä–æ–≤–∞—Ç—å Entities –æ–¥–∏–Ω —Ä–∞–∑.
local function getEntityFolder()
    local map = workspace:FindFirstChild("Map") or workspace:WaitForChild("Map")
    return map:WaitForChild("Entities")
end

-- –ü–∞—Ä—Å–∏–Ω–≥ –¥–µ–Ω–µ–≥
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", ""):lower()
    val = val:match("[0-9%.]*k?") or "0"
    if val:find("k") then
        local numberPart = tonumber(val:gsub("k", ""))
        return numberPart and numberPart * 1000 or 0
    end
    return tonumber(val) or 0
end

local function waitForCashSystem()
    repeat RunService.Heartbeat:Wait()
    until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

local function waitForCash(amount)
    repeat RunService.Heartbeat:Wait()
    until parseCash(cash and cash.Value) >= amount or restarting
end

-- –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –º–æ–¥–µ–ª–∏ (pivot –∏–ª–∏ –ª—é–±–∞—è BasePart)
local function modelPos(m)
    if not (m and m:IsA("Model")) then return nil end
    local ok, cf = pcall(function() return m:GetPivot() end)
    if ok and typeof(cf) == "CFrame" then return cf.Position end
    local part = m:FindFirstChildWhichIsA("BasePart", true)
    return part and part.Position or nil
end

-- placeUnit: —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ 'unit_' –º–æ–¥–µ–ª–∏ –∏ –¥–∞—ë–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ç–µ–º, –≥–¥–µ ID/Name —Å–æ–¥–µ—Ä–∂–∏—Ç unitName
local function placeUnit(unitName, pos, rotation)
    local entityFolder = getEntityFolder()

    local before = {}
    for _, v in ipairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(rotation or 180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = rotation or 180
    })

    local bestId = nil
    local bestScore = math.huge

    -- —Å–æ–±–∏—Ä–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–æ ~4 —Å–µ–∫—É–Ω–¥ (240 Heartbeat)
    for _ = 1, 240 do
        RunService.Heartbeat:Wait()
        -- –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ Entities –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π (–∫–∞—Ä—Ç–∞ –º–æ–≥–ª–∞ —Å–º–µ–Ω–∏—Ç—å—Å—è)
        entityFolder = getEntityFolder()

        for _, v in ipairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") then
                local id = v:GetAttribute("ID")
                local name = v.Name or ""
                local idIsUnit = (type(id) == "string" and id:match("^unit_"))
                local nameIsUnit = (type(name) == "string" and name:match("^unit_"))
                if idIsUnit or nameIsUnit then
                    local p = modelPos(v)
                    local d = p and (p - pos).Magnitude or 9999
                    local containsUnitName = false
                    if type(id) == "string" and id:find(unitName, 1, true) then containsUnitName = true end
                    if not containsUnitName and type(name) == "string" and name:find(unitName, 1, true) then containsUnitName = true end
                    local score = d + (containsUnitName and 0 or 1000)
                    if score < bestScore then
                        bestScore = score
                        bestId = id
                    end
                    if containsUnitName and d <= 8 and id then
                        return id
                    end
                end
            end
        end
        if bestId and type(bestId) == "string" then
            return bestId
        end
    end

    -- –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å: –∂–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è ID –Ω–∞ –±–ª–∏–∂–∞–π—à–∏—Ö unit_ –º–æ–¥–µ–ª—è—Ö
    entityFolder = getEntityFolder()
    for _, v in ipairs(entityFolder:GetChildren()) do
        if not before[v] and v:IsA("Model") then
            local name = v.Name or ""
            if name:match("^unit_") then
                for _ = 1, 120 do
                    RunService.Heartbeat:Wait()
                    local id = v:GetAttribute("ID")
                    if id and type(id) == "string" and id:match("^unit_") then
                        return id
                    end
                end
            end
        end
    end

    return nil
end

-- –ê–ø–≥—Ä–µ–π–¥—ã (–∫–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ + —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–¥ –∞–ø–≥—Ä–µ–π–¥–æ–º)
local function upgradeAtCash(unitId, costs)
    if not unitId then return end
    RunService.Heartbeat:Wait()
    RunService.Heartbeat:Wait()
    RunService.Heartbeat:Wait() -- —á—É—Ç—å –±–æ–ª—å—à–µ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    for _, cost in ipairs(costs) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
        RunService.Heartbeat:Wait()
    end
end

-- –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ Impossible (–ø–æ–≤—Ç–æ—Ä—è–µ—Ç –ø–æ–ø—ã—Ç–∫—É, –ø–æ–∫–∞ –æ–∫–Ω–æ —Ä–µ–∞–ª—å–Ω–æ –≤–∏–¥–Ω–æ)
local function voteImpossible()
    task.spawn(function()
        while true do
            RunService.Heartbeat:Wait()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- –ê–≤—Ç–æ-—Ä–µ—Å—Ç–∞—Ä—Ç: –∂–º—ë–º 'Again' –∏ –º—è–≥–∫–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª
-- –í–ê–ñ–ù–û: –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å –ø–æ–¥–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ 1 —Å–µ–∫—É–Ω–¥—É –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞, —á—Ç–æ–±—ã –Ω–µ –¥—ë—Ä–≥–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ,
-- –∏ –Ω–µ —Å–±–∏–≤–∞—Ç—å –Ω–∞—á–∞–ª–æ –Ω–æ–≤–æ–π –∫–∞—Ç–∫–∏ (–∏–Ω–∞—á–µ –≤—Å—ë –º–æ–∂–µ—Ç –∑–∞–ª–∏–ø–∞—Ç—å –Ω–∞ –≤—ã–±–æ—Ä–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏).

local function tryAutoRestart()
    -- —Å–º. watcher –Ω–∏–∂–µ
end

task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()

        -- –ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –∫–æ—Ä–æ—Ç–∫–æ–µ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞
        if time() < suppressWatcherUntil then
            continue
        end

        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle.GameEnd
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")

        if btn and btn.Visible then
            if time() - last_restart >= RESTART_DEBOUNCE then
                restarting = true
                last_restart = time()
                suppressWatcherUntil = last_restart + RESTART_DEBOUNCE
                ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
            end
        end
    end
end)

-- –ê–Ω—Ç–∏-–ª–∞–≥
local function reduceLag()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") then
            obj.Enabled = false
        elseif obj:IsA("Decal") then
            obj.Transparency = 1
        elseif obj:IsA("Sound") then
            obj.Volume = 0
        elseif obj:IsA("Highlight") then
            obj.Enabled = false
        end
    end
    Lighting.GlobalShadows = false
    Lighting.Brightness = 0
    Lighting.FogEnd = 999999
end

-- –û—Å–Ω–æ–≤–Ω–æ–π run (—Ç–æ—Ç –∂–µ –ø–æ—Ä—è–¥–æ–∫/—Ü–µ–Ω—ã)
local function run()
    RunService.Heartbeat:Wait()

    -- ‚ö†Ô∏è –ë–û–õ–¨–®–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –±–æ–ª—å—à–µ –ù–ï –≤—ã–∑—ã–≤–∞–µ–º RestartGame –∑–¥–µ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.
    -- –†–µ—Å—Ç–∞—Ä—Ç –∏–Ω–∏—Ü–∏–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –≤–æ—Ç—á–µ—Ä–µ –ø–æ –ø–æ—è–≤–ª–µ–Ω–∏—é –æ–∫–Ω–∞ GameEnd‚ÜíAgain.
    -- –≠—Ç–æ —É–±–∏—Ä–∞–µ—Ç –≥–æ–Ω–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏–π –∏ –∑–∞–≤–∏—Å–∞–Ω–∏–µ –Ω–∞ –≤—ã–±–æ—Ä–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏.

    voteImpossible()
    waitForCashSystem()

    -- –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è, —Å–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ —Ä–µ—Å—Ç–∞—Ä—Ç–∞
    restarting = false
    reduceLag()

    ------------------------------------------------------------------------
    -- Electric Beetroot (–ø–µ—Ä–≤—ã–π, –±–µ–∑ –¥–æ–ø. –∞–ø–≥—Ä–µ–π–¥–∞ 1000)
    waitForCash(200)
    local beet1 = placeUnit("unit_electric_beetroot", Vector3.new(-4.406354904174805, 1.9999998807907104, 345.56976318359375), 180)
    upgradeAtCash(beet1, {250, 500, 750})

    -- Beehives
    local beehivePos = {
        Vector3.new( 1.958890676498413, 1.9999998807907104, 315.4044494628906),
        Vector3.new(-0.5488870739936829, 1.9999998807907104, 315.1313781738281),
        Vector3.new(-3.08665132522583,  1.9999998807907104, 315.0760498046875),
    }
    for _, pos in ipairs(beehivePos) do
        waitForCash(2500)
        local id = placeUnit("unit_beehive", pos, 180)
        upgradeAtCash(id, {1500, 4000, 10000, 25000})
        if restarting then return end
    end

    -- Hellroots (unit_dragon_head)
    local hellPos = {
        Vector3.new(-4.420583724975586, 1.9999998807907104, 332.72015380859375),
        Vector3.new(-3.7761306762695312, 1.9999998807907104, 336.3861999511719),
        Vector3.new(-3.759739875793457, 1.9999998807907104, 340.1415100097656),
    }
    for _, pos in ipairs(hellPos) do
        waitForCash(2000)
        local id = placeUnit("unit_dragon_head", pos, 180)
        upgradeAtCash(id, {5500, 8000, 12000, 33000})
        if restarting then return end
    end

    -- Lucky Clover
    waitForCash(1500)
    local lucky = placeUnit("unit_lucky_plant", Vector3.new(3.173248291015625, 1.9999998807907104, 327.088623046875), 180)
    upgradeAtCash(lucky, {3000, 4000, 7500, 15000})
    if restarting then return end

    -- Sprinkler
    waitForCash(600)
    local sprinkler = placeUnit("unit_sprinkler", Vector3.new(3.552043914794922, 1.9999998807907104, 324.0252990722656), 180)
    upgradeAtCash(sprinkler, {560, 750, 1000, 1300})
    if restarting then return end

    -- Seed Mech (unit_old_machine)
    local seedPos = {
        Vector3.new(4.49534797668457,  1.9999998807907104, 330.9710998535156),
        Vector3.new(4.059284210205078, 1.9999998807907104, 333.3840026855469),
        Vector3.new(4.076716423034668, 1.9999998807907104, 335.8547058105469),
        Vector3.new(4.361018180847168, 1.9999998807907104, 337.6783142089844),
        Vector3.new(4.022946357727051, 1.9999998807907104, 340.01507568359375),
    }
    for _, pos in ipairs(seedPos) do
        waitForCash(3000)
        local id = placeUnit("unit_old_machine", pos, 180)
        upgradeAtCash(id, {5000, 8800, 13700, 28500})
        if restarting then return end
    end

    -- Rosebeam
    local rosePos = {
        Vector3.new( 4.988903999328613, 1.9999998807907104, 343.2156066894531),
        Vector3.new(-3.931900978088379, 1.9999998807907104, 344.3135070800781),
        Vector3.new(-4.040769577026367, 1.9999998807907104, 347.7846984863281),
    }
    for _, pos in ipairs(rosePos) do
        waitForCash(12750)
        local id = placeUnit("unit_rosebeam", pos, 180)
        upgradeAtCash(id, {8000, 14000, 30000, 57500})
        if restarting then return end
    end

    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ Electric Beetroot (—Å –∞–ø–≥—Ä–µ–π–¥–æ–º –∑–∞ 1000)
    local beetExtra = {
        Vector3.new(4.2467041015625,   1.9999998807907104, 347.1902160644531),
        Vector3.new(4.004511833190918, 1.9999998807907104, 349.51129150390625),
        Vector3.new(6.94158935546875,  1.9999998807907104, 347.3568115234375),
    }
    for _, pos in ipairs(beetExtra) do
        waitForCash(200)
        local id = placeUnit("unit_electric_beetroot", pos, 180)
        upgradeAtCash(id, {250, 500, 750, 1000})
        if restarting then return end
    end

    -- –∂–¥—ë–º –¥–æ –∫–æ–Ω—Ü–∞, –ø–æ–∫–∞ –Ω–µ –ø–æ–ø—Ä–æ—Å–∏–ª–∏ —Ä–µ—Å—Ç–∞—Ä—Ç
    while not restarting do RunService.Heartbeat:Wait() end
end

-- –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
while true do
    run()
end
