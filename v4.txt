-- üîÅ –§–ò–ù–ê–õ–¨–ù–´–ô –ê–í–¢–û–§–ê–†–ú: 3 Beetroot ‚Üí 3 Beehive ‚Üí 4 Mushrooms ‚Üí –ê–≤—Ç–æ—Å–∫–∏–ø ‚Üí –†–µ—Å—Ç–∞—Ä—Ç + –ê–Ω—Ç–∏–ª–∞–≥
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local restarting = false
local autoSkip = false
local cash

-- üí∞ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è Cash
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then return tonumber(val:lower():gsub("k", "")) * 1000 end
    return tonumber(val) or 0
end

-- üí∞ –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∑–Ω–∞—á–µ–Ω–∏—è Cash
local function waitForCashSystem()
    repeat RunService.Heartbeat:Wait() until player:FindFirstChild("leaderstats") and player.leaderstats:FindFirstChild("Cash")
    cash = player.leaderstats.Cash
end

local function waitForCash(amount)
    repeat RunService.Heartbeat:Wait() until parseCash(cash.Value) >= amount or restarting
end

-- üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–∞
local function placeUnitAndGetId(unitName, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true, Position = pos, CF = cf, Rotation = 180
    })

    for _ = 1, 50 do
        RunService.Heartbeat:Wait()
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
    return nil
end

-- ‚¨ÜÔ∏è –ê–ø–≥—Ä–µ–π–¥—ã
local function upgradeAtCash(unitId, steps, onStep)
    for i, cost in ipairs(steps) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
        if onStep then onStep(i) end
    end
end

-- üß† –í—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
local function voteImpossible()
    task.spawn(function()
        while true do
            RunService.Heartbeat:Wait()
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- üîÅ Restart –ø–æ –∫–Ω–æ–ø–∫–µ
task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- ‚è© –ê–≤—Ç–æ—Å–∫–∏–ø –≤–æ–ª–Ω
task.spawn(function()
    while true do
        RunService.Heartbeat:Wait()
        if autoSkip and not restarting then
            ReplicatedStorage.RemoteFunctions.SkipWave:InvokeServer("y")
        end
    end
end)

-- üí£ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–∞–≥–æ–≤ –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫
task.spawn(function()
    while true do
        wait(2)
        for _, v in pairs(entityFolder:GetChildren()) do
            if v:IsA("Model") and v.Name:lower():find("enemy_") then
                pcall(function() v:Destroy() end)
            end
        end
    end
end)

-- üßπ –ê–Ω—Ç–∏–ª–∞–≥
local function reduceLag()
    for _, obj in ipairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Beam") or obj:IsA("Highlight") then
            obj.Enabled = false
        elseif obj:IsA("Decal") then
            obj.Transparency = 1
        elseif obj:IsA("Sound") then
            obj.Volume = 0
        end
    end
    Lighting.GlobalShadows = false
    Lighting.Brightness = 0
    Lighting.FogEnd = 999999
end

-- üîÅ –û–¥–∏–Ω –º–∞—Ç—á
local function runMatch()
    RunService.Heartbeat:Wait()
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    waitForCashSystem()
    restarting = false
    autoSkip = false
    reduceLag()

    -- –¢–µ–ª–µ–ø–æ—Ä—Ç
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then root.CFrame = CFrame.new(-80.85776, -29.52275, 215.46897) end

    -- üå≥ Money Tree (no upgrade)
    waitForCash(400)
    placeUnitAndGetId("unit_money_tree", Vector3.new(-99.5573, -27.8982, 198.4464))

    -- ü•¨ Beetroots
    local beetCoords = {
        Vector3.new(-92.6838, -29.5228, 225.8844),
        Vector3.new(-69.7396, -29.5228, 226.1392),
        Vector3.new(-69.1002, -29.5228, 205.2425),
    }

    for _, pos in ipairs(beetCoords) do
        waitForCash(200)
        local id = placeUnitAndGetId("unit_electric_beetroot", pos)
        if id then upgradeAtCash(id, {250, 500, 750}) end
        if restarting then return end
    end

    -- üêù Beehives
    local beehiveCoords = {
        Vector3.new(-91.5276, -28.9081, 210.0433),
        Vector3.new(-86.2081, -28.9081, 205.2484),
        Vector3.new(-86.9386, -28.9081, 190.8840),
    }

    for i, pos in ipairs(beehiveCoords) do
        waitForCash(2500)
        local id = placeUnitAndGetId("unit_beehive", pos)
        if id then
            upgradeAtCash(id, {1500, 4000, 10000, 25000}, function(step)
                if i == 1 and step == 1 then
                    autoSkip = true -- ‚è© –∞–≤—Ç–æ—Å–∫–∏–ø –ø–æ—Å–ª–µ 1 –∞–ø–≥—Ä–µ–π–¥–∞ 1-–≥–æ beehive
                end
            end)
        end
        if restarting then return end
    end

    -- üçÑ Mushrooms
    local mushPos = {
        Vector3.new(-70.8455, -27.5161, 207.9814),
        Vector3.new(-76.7063, -27.5161, 212.7099),
        Vector3.new(-83.4403, -27.5161, 205.4651),
        Vector3.new(-68.7585, -27.5161, 216.4131),
    }

    for _, pos in ipairs(mushPos) do
        waitForCash(3000)
        local id = placeUnitAndGetId("unit_big_mushroom", pos)
        if id then upgradeAtCash(id, {6000, 7500, 12500, 20000}) end
        if restarting then return end
    end

    -- –ñ–¥—ë–º —Ä–µ—Å—Ç–∞—Ä—Ç
    while not restarting do RunService.Heartbeat:Wait() end
end

-- üöÄ –ó–∞–ø—É—Å–∫
while true do
    runMatch()
end
