-- üîÅ –ê–í–¢–û–§–ê–†–ú: Money Tree ‚Üí Beetroot √ó2 ‚Üí Beehive √ó3 (Impossible) + —Ç–µ–ª–µ–ø–æ—Ä—Ç

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local cash = player:WaitForChild("leaderstats"):WaitForChild("Cash")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")

local restarting = false

local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then
        return tonumber(val:lower():gsub("k", "")) * 1000
    end
    return tonumber(val) or 0
end

local function waitForCash(amount)
    repeat task.wait(0.1) until parseCash(cash.Value) >= amount or restarting
end

local function placeUnitAndGetId(unitName, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true,
        Position = pos,
        CF = cf,
        Rotation = 180
    })

    for _ = 1, 50 do
        task.wait(0.1)
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
end

local function upgradeAtCash(unitId, steps)
    for _, cost in ipairs(steps) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
    end
end

-- üß† –ì–æ–ª–æ—Å—É–µ–º –∑–∞ Impossible
local function voteImpossible()
    task.spawn(function()
        while true do
            task.wait(0.1)
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_impossible")
                break
            end
        end
    end)
end

-- üîÅ –û–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Play Again"
task.spawn(function()
    while true do
        task.wait(0.1)
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui.Screen
            and gui.GameGui.Screen.Middle
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- üîÑ –û–¥–∏–Ω —Ü–∏–∫–ª
local function run()
    task.wait(0.1)
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    voteImpossible()
    restarting = false

    -- üßç –¢–µ–ª–µ–ø–æ—Ä—Ç –∏–≥—Ä–æ–∫–∞
    task.spawn(function()
        local character = player.Character or player.CharacterAdded:Wait()
        local hrp = character:WaitForChild("HumanoidRootPart")
        hrp.CFrame = CFrame.new(-80.8577651977539, -29.522750854492188, 215.46897888183594) * CFrame.Angles(0, math.rad(180), 0)
    end)

    -- üå≥ Money Tree
    waitForCash(500)
    if restarting then return end
    placeUnitAndGetId("unit_money_tree", Vector3.new(-99.557, -27.898, 198.446))

    -- ‚ö° Beetroot √ó2
    local beetUpgrades = {250, 500, 750}
    waitForCash(200)
    if restarting then return end
    local id1 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-92.684, -29.523, 225.884))
    if id1 then upgradeAtCash(id1, beetUpgrades) end

    waitForCash(200)
    if restarting then return end
    local id2 = placeUnitAndGetId("unit_electric_beetroot", Vector3.new(-69.740, -29.523, 226.139))
    if id2 then upgradeAtCash(id2, beetUpgrades) end

    -- üêù Beehive √ó3
    local beeUpgrades = {1500, 4000, 10000, 25000}
    waitForCash(2500)
    if restarting then return end
    local id3 = placeUnitAndGetId("unit_beehive", Vector3.new(-91.528, -28.908, 210.043))
    if id3 then upgradeAtCash(id3, beeUpgrades) end

    waitForCash(2500)
    if restarting then return end
    local id4 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.208, -28.908, 205.248))
    if id4 then upgradeAtCash(id4, beeUpgrades) end

    waitForCash(2500)
    if restarting then return end
    local id5 = placeUnitAndGetId("unit_beehive", Vector3.new(-86.939, -28.908, 190.884))
    if id5 then upgradeAtCash(id5, beeUpgrades) end

    while not restarting do task.wait(0.2) end
end

-- üîÅ –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
while true do run() end
