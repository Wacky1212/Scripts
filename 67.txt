local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")
local cash = player:WaitForChild("leaderstats"):WaitForChild("Cash")

-- üí∞ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ Cash
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then
        local num = tonumber(val:lower():gsub("k", ""))
        if num then return num * 1000 end
    end
    return tonumber(val)
end

-- ‚è≥ –ñ–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π Cash
local function waitForCash(amount)
    repeat wait(0.2) until parseCash(cash.Value) >= amount
end

-- ‚¨ÜÔ∏è –ü—Ä–æ–±–æ–≤–∞—Ç—å –∞–ø–≥—Ä–µ–π–¥ –¥–æ –Ω—É–∂–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è (–º–∞–∫—Å. 7 –ø–æ–ø—ã—Ç–æ–∫)
local function forceUpgradeUntilLevel(unitId, targetLevel)
    for attempt = 1, 7 do
        -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
        local currentLevel = 0
        for _, unit in pairs(entityFolder:GetChildren()) do
            if unit:GetAttribute("ID") == unitId then
                currentLevel = unit:GetAttribute("UpgradeLevel") or 0
                break
            end
        end

        if currentLevel >= targetLevel then
            print("‚úÖ –Æ–Ω–∏—Ç", unitId, "—É–∂–µ –Ω–∞ —É—Ä–æ–≤–Ω–µ", currentLevel)
            return true
        end

        -- –ü–æ–ø—ã—Ç–∫–∞
        print("üîÅ –ü–æ–ø—ã—Ç–∫–∞", attempt, "‚Äî –∞–ø–≥—Ä–µ–π–¥ —é–Ω–∏—Ç–∞", unitId, "–¥–æ —É—Ä–æ–≤–Ω—è", targetLevel)
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(unitId)
        wait(1)
    end

    warn("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–ø–≥—Ä–µ–π–¥–∏—Ç—å —é–Ω–∏—Ç", unitId, "–¥–æ —É—Ä–æ–≤–Ω—è", targetLevel)
    return false
end

-- üß± –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ ID
local function placeUnitAndGetId(unitName, position)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(position) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(unitName, {
        Valid = true,
        Position = position,
        CF = cf,
        Rotation = 180
    })

    for _ = 1, 50 do
        wait(0.1)
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                print("‚úÖ –Æ–Ω–∏—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω:", unitName)
                return v:GetAttribute("ID")
            end
        end
    end

    warn("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —é–Ω–∏—Ç:", unitName)
    return nil
end

-- üì¶ –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ–¥–Ω–æ–π –∫–∞—Ç–∫–∏
local function runMatch()
    wait(1)
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    wait(1)
    ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_insane")
    wait(1)

    -- === 1‚Äì3: unit_farmer_npc
    waitForCash(200)
    local id1 = placeUnitAndGetId("unit_farmer_npc", Vector3.new(-332.14, 63.38, -77.40))
    if id1 then
        waitForCash(250) forceUpgradeUntilLevel(id1, 1)
        waitForCash(350) forceUpgradeUntilLevel(id1, 2)
        waitForCash(500) forceUpgradeUntilLevel(id1, 3)
    end

    waitForCash(200)
    local id2 = placeUnitAndGetId("unit_farmer_npc", Vector3.new(-338.47, 63.38, -77.79))
    if id2 then
        waitForCash(250) forceUpgradeUntilLevel(id2, 1)
        waitForCash(350) forceUpgradeUntilLevel(id2, 2)
        waitForCash(500) forceUpgradeUntilLevel(id2, 3)
    end

    waitForCash(200)
    local id3 = placeUnitAndGetId("unit_farmer_npc", Vector3.new(-338.30, 63.38, -83.23))
    if id3 then
        waitForCash(250) forceUpgradeUntilLevel(id3, 1)
        waitForCash(350) forceUpgradeUntilLevel(id3, 2)
        waitForCash(500) forceUpgradeUntilLevel(id3, 3)
    end

    -- === 4: unit_beehive
    waitForCash(2500)
    local id4 = placeUnitAndGetId("unit_beehive", Vector3.new(-330.08, 63.46, -99.32))
    if id4 then
        waitForCash(1500) forceUpgradeUntilLevel(id4, 1)
        waitForCash(4000) forceUpgradeUntilLevel(id4, 2)
        waitForCash(10000) forceUpgradeUntilLevel(id4, 3)
        waitForCash(25000) forceUpgradeUntilLevel(id4, 4)
    end

    -- === 5: unit_beehive
    waitForCash(2500)
    local id5 = placeUnitAndGetId("unit_beehive", Vector3.new(-323.65, 63.46, -98.40))
    if id5 then
        waitForCash(1500) forceUpgradeUntilLevel(id5, 1)
        waitForCash(4000) forceUpgradeUntilLevel(id5, 2)
        waitForCash(10000) forceUpgradeUntilLevel(id5, 3)
        waitForCash(25000) forceUpgradeUntilLevel(id5, 4)
    end

    -- === 6: unit_beehive
    waitForCash(2500)
    local id6 = placeUnitAndGetId("unit_beehive", Vector3.new(-324.86, 63.46, -91.45))
    if id6 then
        waitForCash(1500) forceUpgradeUntilLevel(id6, 1)
        waitForCash(4000) forceUpgradeUntilLevel(id6, 2)
        waitForCash(10000) forceUpgradeUntilLevel(id6, 3)
        waitForCash(25000) forceUpgradeUntilLevel(id6, 4)
    end
end

-- üîÑ –ñ–¥–∞—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ Play Again –∏ –Ω–∞–∂–∞—Ç—å
local function waitForPlayAgainButton()
    print("üîÑ –ñ–¥—ë–º –∫–Ω–æ–ø–∫—É Play Again...")
    local gui = player:WaitForChild("PlayerGui")
    while true do
        wait(0.5)
        local btn = gui:FindFirstChild("GameGui")
            and gui.GameGui:FindFirstChild("Screen")
            and gui.GameGui.Screen:FindFirstChild("Middle")
            and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
            and gui.GameGui.Screen.Middle.GameEnd:FindFirstChild("Items")
            and gui.GameGui.Screen.Middle.GameEnd.Items:FindFirstChild("Frame")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame:FindFirstChild("Actions")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions:FindFirstChild("Items")
            and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")

        if btn and btn.Visible then
            print("‚úÖ –ö–Ω–æ–ø–∫–∞ 'Play Again' –Ω–∞–π–¥–µ–Ω–∞ ‚Äî —Ä–µ—Å—Ç–∞—Ä—Ç...")
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
            break
        end
    end
end

-- üîÅ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –∏–≥—Ä—ã
while true do
    runMatch()
    waitForPlayAgainButton()
end
