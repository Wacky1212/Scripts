-- üîÅ –ê–í–¢–û–§–ê–†–ú: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π, –±—ã—Å—Ç—Ä—ã–π, –±–µ–∑ –º—É—Å–æ—Ä–∞

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local cash = player:WaitForChild("leaderstats"):WaitForChild("Cash")
local entityFolder = workspace:WaitForChild("Map"):WaitForChild("Entities")
local gui = player:WaitForChild("PlayerGui")

local restarting = false

-- üí∞ –ü–∞—Ä—Å–∏–º –¥–µ–Ω—å–≥–∏
local function parseCash(val)
    val = tostring(val or "0"):gsub(",", "")
    if val:lower():find("k") then return tonumber(val:lower():gsub("k", "")) * 1000 end
    return tonumber(val) or 0
end

-- üí∞ –ñ–¥—ë–º –ø–æ–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥
local function waitForCash(amount)
    repeat task.wait(0.1) until parseCash(cash.Value) >= amount or restarting
end

-- üì¶ –°—Ç–∞–≤–∏–º —é–Ω–∏—Ç–∞ –∏ –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ ID
local function placeUnitAndGetId(name, pos)
    local before = {}
    for _, v in pairs(entityFolder:GetChildren()) do before[v] = true end

    local cf = CFrame.new(pos) * CFrame.Angles(0, math.rad(180), 0)
    ReplicatedStorage.RemoteFunctions.PlaceUnit:InvokeServer(name, {
        Valid = true, Position = pos, CF = cf, Rotation = 180
    })

    for _ = 1, 50 do
        task.wait(0.1)
        for _, v in pairs(entityFolder:GetChildren()) do
            if not before[v] and v:IsA("Model") and v:GetAttribute("ID") then
                return v:GetAttribute("ID")
            end
        end
    end
end

-- ‚¨ÜÔ∏è –ê–ø–≥—Ä–µ–π–¥—ã –ø–æ —à–∞–≥–∞–º
local function upgradeAtCash(id, steps)
    for _, cost in ipairs(steps) do
        waitForCash(cost)
        if restarting then return end
        ReplicatedStorage.RemoteFunctions.UpgradeUnit:InvokeServer(id)
    end
end

-- üì¶ –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∞–ø–≥—Ä–µ–π–¥
local function safePlaceAndUpgrade(name, pos, steps)
    waitForCash(steps[1] or 1000)
    if restarting then return end
    local id = placeUnitAndGetId(name, pos)
    if id then upgradeAtCash(id, steps) end
end

-- üß† –ê–≤—Ç–æ–≤—ã–±–æ—Ä —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ Insane
local function autoVoteDifficulty()
    task.spawn(function()
        while true do
            task.wait(0.1)
            local ui = gui:FindFirstChild("GameGui")
                and gui.GameGui.Screen
                and gui.GameGui.Screen.Middle
                and gui.GameGui.Screen.Middle:FindFirstChild("DifficultyVote")
            if ui and ui.Visible then
                ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote:InvokeServer("dif_insane")
                break
            end
        end
    end)
end

-- üîÅ –†–µ—Å—Ç–∞—Ä—Ç –ø–æ –∫–Ω–æ–ø–∫–µ Play Again
task.spawn(function()
    while true do
        task.wait(0.1)
        local btn = gui:FindFirstChild("GameGui")
        and gui.GameGui.Screen
        and gui.GameGui.Screen.Middle
        and gui.GameGui.Screen.Middle:FindFirstChild("GameEnd")
        and gui.GameGui.Screen.Middle.GameEnd.Items
        and gui.GameGui.Screen.Middle.GameEnd.Items.Frame
        and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions
        and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items
        and gui.GameGui.Screen.Middle.GameEnd.Items.Frame.Actions.Items:FindFirstChild("Again")
        if btn and btn.Visible then
            restarting = true
            ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
        end
    end
end)

-- üîÑ –û–¥–∏–Ω –±–æ–π
local function runMatch()
    task.wait(0.1)
    ReplicatedStorage.RemoteFunctions.RestartGame:InvokeServer()
    autoVoteDifficulty()
    restarting = false

    -- 1‚Äì3: —Ñ–µ—Ä–º–µ—Ä—ã
    safePlaceAndUpgrade("unit_farmer_npc", Vector3.new(-332.14, 63.38, -77.40), {250, 350, 500})
    safePlaceAndUpgrade("unit_farmer_npc", Vector3.new(-338.47, 63.38, -77.79), {250, 350, 500})
    safePlaceAndUpgrade("unit_farmer_npc", Vector3.new(-338.30, 63.38, -83.23), {250, 350, 500})

    -- 4: –ø—Ä–æ—Å—Ç–æ —Å—Ç–∞–≤–∏–º beehive
    waitForCash(2500)
    if restarting then return end
    placeUnitAndGetId("unit_beehive", Vector3.new(-330.08, 63.46, -99.32))

    -- 5‚Äì6: –∞–ø–≥—Ä–µ–π–¥–∏–º beehive
    safePlaceAndUpgrade("unit_beehive", Vector3.new(-323.65, 63.46, -98.40), {1500, 4000, 10000, 25000})
    safePlaceAndUpgrade("unit_beehive", Vector3.new(-324.86, 63.46, -91.45), {1500, 4000, 10000, 25000})

    -- 7‚Äì9: pulse
    safePlaceAndUpgrade("unit_pulse_plant", Vector3.new(-325.80, 63.94, -78.21), {3000, 7500, 10000, 25000})
    safePlaceAndUpgrade("unit_pulse_plant", Vector3.new(-328.13, 63.94, -85.03), {3000, 7500, 10000, 25000})
    safePlaceAndUpgrade("unit_pulse_plant", Vector3.new(-340.26, 63.94, -88.00), {3000, 7500, 10000, 25000})

    while not restarting do task.wait(0.5) end
end

-- üöÄ –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª
while true do
    runMatch()
end
